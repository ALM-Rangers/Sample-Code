//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18046.
// 
#pragma warning disable 1591

namespace Client.AsmxServiceReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="TestAsmxServiceSoap", Namespace="http://contoso.com/asmxservice/test")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class TestAsmxService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessSimpleAsmxRequestWrappedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessMultipleParametersWrappedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessSimpleAsmxRequestBareOperationCompleted;
        
        private System.Threading.SendOrPostCallback SimpleTypesOperationCompleted;
        
        private System.Threading.SendOrPostCallback WithNullableIntOperationCompleted;
        
        private System.Threading.SendOrPostCallback ScalarArrayOperationCompleted;
        
        private System.Threading.SendOrPostCallback XmlRequestMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback CollectionMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessShapeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessCircleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessDataSetWithMoreDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessTypedDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessCompoundDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessCompoundTypedDataSetOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public TestAsmxService() {
            this.Url = global::Client.Properties.Settings.Default.Client_AsmxServiceReference_TestAsmxService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessSimpleAsmxRequestWrappedCompletedEventHandler ProcessSimpleAsmxRequestWrappedCompleted;
        
        /// <remarks/>
        public event ProcessMultipleParametersWrappedCompletedEventHandler ProcessMultipleParametersWrappedCompleted;
        
        /// <remarks/>
        public event ProcessSimpleAsmxRequestBareCompletedEventHandler ProcessSimpleAsmxRequestBareCompleted;
        
        /// <remarks/>
        public event SimpleTypesCompletedEventHandler SimpleTypesCompleted;
        
        /// <remarks/>
        public event WithNullableIntCompletedEventHandler WithNullableIntCompleted;
        
        /// <remarks/>
        public event ScalarArrayCompletedEventHandler ScalarArrayCompleted;
        
        /// <remarks/>
        public event XmlRequestMethodCompletedEventHandler XmlRequestMethodCompleted;
        
        /// <remarks/>
        public event CollectionMethodCompletedEventHandler CollectionMethodCompleted;
        
        /// <remarks/>
        public event ProcessShapeCompletedEventHandler ProcessShapeCompleted;
        
        /// <remarks/>
        public event ProcessCircleCompletedEventHandler ProcessCircleCompleted;
        
        /// <remarks/>
        public event ProcessDataSetCompletedEventHandler ProcessDataSetCompleted;
        
        /// <remarks/>
        public event ProcessDataSetWithMoreDataCompletedEventHandler ProcessDataSetWithMoreDataCompleted;
        
        /// <remarks/>
        public event ProcessTypedDataSetCompletedEventHandler ProcessTypedDataSetCompleted;
        
        /// <remarks/>
        public event ProcessCompoundDataSetCompletedEventHandler ProcessCompoundDataSetCompleted;
        
        /// <remarks/>
        public event ProcessCompoundTypedDataSetCompletedEventHandler ProcessCompoundTypedDataSetCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessSimpleAsmxRequestWrapped", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessSimpleAsmxRequestWrapped(SimpleAsmxRequest r) {
            object[] results = this.Invoke("ProcessSimpleAsmxRequestWrapped", new object[] {
                        r});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessSimpleAsmxRequestWrappedAsync(SimpleAsmxRequest r) {
            this.ProcessSimpleAsmxRequestWrappedAsync(r, null);
        }
        
        /// <remarks/>
        public void ProcessSimpleAsmxRequestWrappedAsync(SimpleAsmxRequest r, object userState) {
            if ((this.ProcessSimpleAsmxRequestWrappedOperationCompleted == null)) {
                this.ProcessSimpleAsmxRequestWrappedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessSimpleAsmxRequestWrappedOperationCompleted);
            }
            this.InvokeAsync("ProcessSimpleAsmxRequestWrapped", new object[] {
                        r}, this.ProcessSimpleAsmxRequestWrappedOperationCompleted, userState);
        }
        
        private void OnProcessSimpleAsmxRequestWrappedOperationCompleted(object arg) {
            if ((this.ProcessSimpleAsmxRequestWrappedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessSimpleAsmxRequestWrappedCompleted(this, new ProcessSimpleAsmxRequestWrappedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessMultipleParametersWrapped", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ProcessMultipleParametersWrapped(int a, string b) {
            object[] results = this.Invoke("ProcessMultipleParametersWrapped", new object[] {
                        a,
                        b});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessMultipleParametersWrappedAsync(int a, string b) {
            this.ProcessMultipleParametersWrappedAsync(a, b, null);
        }
        
        /// <remarks/>
        public void ProcessMultipleParametersWrappedAsync(int a, string b, object userState) {
            if ((this.ProcessMultipleParametersWrappedOperationCompleted == null)) {
                this.ProcessMultipleParametersWrappedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessMultipleParametersWrappedOperationCompleted);
            }
            this.InvokeAsync("ProcessMultipleParametersWrapped", new object[] {
                        a,
                        b}, this.ProcessMultipleParametersWrappedOperationCompleted, userState);
        }
        
        private void OnProcessMultipleParametersWrappedOperationCompleted(object arg) {
            if ((this.ProcessMultipleParametersWrappedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessMultipleParametersWrappedCompleted(this, new ProcessMultipleParametersWrappedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessSimpleAsmxRequestBare", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute(Namespace="http://contoso.com/asmxservice/test")]
        public string ProcessSimpleAsmxRequestBare([System.Xml.Serialization.XmlElementAttribute(Namespace="http://contoso.com/asmxservice/test")] SimpleAsmxRequest r) {
            object[] results = this.Invoke("ProcessSimpleAsmxRequestBare", new object[] {
                        r});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessSimpleAsmxRequestBareAsync(SimpleAsmxRequest r) {
            this.ProcessSimpleAsmxRequestBareAsync(r, null);
        }
        
        /// <remarks/>
        public void ProcessSimpleAsmxRequestBareAsync(SimpleAsmxRequest r, object userState) {
            if ((this.ProcessSimpleAsmxRequestBareOperationCompleted == null)) {
                this.ProcessSimpleAsmxRequestBareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessSimpleAsmxRequestBareOperationCompleted);
            }
            this.InvokeAsync("ProcessSimpleAsmxRequestBare", new object[] {
                        r}, this.ProcessSimpleAsmxRequestBareOperationCompleted, userState);
        }
        
        private void OnProcessSimpleAsmxRequestBareOperationCompleted(object arg) {
            if ((this.ProcessSimpleAsmxRequestBareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessSimpleAsmxRequestBareCompleted(this, new ProcessSimpleAsmxRequestBareCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/SimpleTypes", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SimpleTypes(int i, ConsoleColor e, string s, decimal d, System.DateTime dt, System.Guid g, System.Xml.XmlQualifiedName xqn) {
            object[] results = this.Invoke("SimpleTypes", new object[] {
                        i,
                        e,
                        s,
                        d,
                        dt,
                        g,
                        xqn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SimpleTypesAsync(int i, ConsoleColor e, string s, decimal d, System.DateTime dt, System.Guid g, System.Xml.XmlQualifiedName xqn) {
            this.SimpleTypesAsync(i, e, s, d, dt, g, xqn, null);
        }
        
        /// <remarks/>
        public void SimpleTypesAsync(int i, ConsoleColor e, string s, decimal d, System.DateTime dt, System.Guid g, System.Xml.XmlQualifiedName xqn, object userState) {
            if ((this.SimpleTypesOperationCompleted == null)) {
                this.SimpleTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSimpleTypesOperationCompleted);
            }
            this.InvokeAsync("SimpleTypes", new object[] {
                        i,
                        e,
                        s,
                        d,
                        dt,
                        g,
                        xqn}, this.SimpleTypesOperationCompleted, userState);
        }
        
        private void OnSimpleTypesOperationCompleted(object arg) {
            if ((this.SimpleTypesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SimpleTypesCompleted(this, new SimpleTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/WithNullableInt", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WithNullableInt([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> r) {
            object[] results = this.Invoke("WithNullableInt", new object[] {
                        r});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WithNullableIntAsync(System.Nullable<int> r) {
            this.WithNullableIntAsync(r, null);
        }
        
        /// <remarks/>
        public void WithNullableIntAsync(System.Nullable<int> r, object userState) {
            if ((this.WithNullableIntOperationCompleted == null)) {
                this.WithNullableIntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWithNullableIntOperationCompleted);
            }
            this.InvokeAsync("WithNullableInt", new object[] {
                        r}, this.WithNullableIntOperationCompleted, userState);
        }
        
        private void OnWithNullableIntOperationCompleted(object arg) {
            if ((this.WithNullableIntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WithNullableIntCompleted(this, new WithNullableIntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ScalarArray", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ScalarArray(int[] a) {
            object[] results = this.Invoke("ScalarArray", new object[] {
                        a});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ScalarArrayAsync(int[] a) {
            this.ScalarArrayAsync(a, null);
        }
        
        /// <remarks/>
        public void ScalarArrayAsync(int[] a, object userState) {
            if ((this.ScalarArrayOperationCompleted == null)) {
                this.ScalarArrayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnScalarArrayOperationCompleted);
            }
            this.InvokeAsync("ScalarArray", new object[] {
                        a}, this.ScalarArrayOperationCompleted, userState);
        }
        
        private void OnScalarArrayOperationCompleted(object arg) {
            if ((this.ScalarArrayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ScalarArrayCompleted(this, new ScalarArrayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/XmlRequestMethod", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void XmlRequestMethod(XmlAsmxRequest request) {
            this.Invoke("XmlRequestMethod", new object[] {
                        request});
        }
        
        /// <remarks/>
        public void XmlRequestMethodAsync(XmlAsmxRequest request) {
            this.XmlRequestMethodAsync(request, null);
        }
        
        /// <remarks/>
        public void XmlRequestMethodAsync(XmlAsmxRequest request, object userState) {
            if ((this.XmlRequestMethodOperationCompleted == null)) {
                this.XmlRequestMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXmlRequestMethodOperationCompleted);
            }
            this.InvokeAsync("XmlRequestMethod", new object[] {
                        request}, this.XmlRequestMethodOperationCompleted, userState);
        }
        
        private void OnXmlRequestMethodOperationCompleted(object arg) {
            if ((this.XmlRequestMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XmlRequestMethodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/CollectionMethod", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CollectionMethod(CollectionsRequest data) {
            this.Invoke("CollectionMethod", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void CollectionMethodAsync(CollectionsRequest data) {
            this.CollectionMethodAsync(data, null);
        }
        
        /// <remarks/>
        public void CollectionMethodAsync(CollectionsRequest data, object userState) {
            if ((this.CollectionMethodOperationCompleted == null)) {
                this.CollectionMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCollectionMethodOperationCompleted);
            }
            this.InvokeAsync("CollectionMethod", new object[] {
                        data}, this.CollectionMethodOperationCompleted, userState);
        }
        
        private void OnCollectionMethodOperationCompleted(object arg) {
            if ((this.CollectionMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CollectionMethodCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessShape", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessShape(AsmxShape shape) {
            this.Invoke("ProcessShape", new object[] {
                        shape});
        }
        
        /// <remarks/>
        public void ProcessShapeAsync(AsmxShape shape) {
            this.ProcessShapeAsync(shape, null);
        }
        
        /// <remarks/>
        public void ProcessShapeAsync(AsmxShape shape, object userState) {
            if ((this.ProcessShapeOperationCompleted == null)) {
                this.ProcessShapeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessShapeOperationCompleted);
            }
            this.InvokeAsync("ProcessShape", new object[] {
                        shape}, this.ProcessShapeOperationCompleted, userState);
        }
        
        private void OnProcessShapeOperationCompleted(object arg) {
            if ((this.ProcessShapeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessShapeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessCircle", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessCircle(AsmxCircle circle) {
            this.Invoke("ProcessCircle", new object[] {
                        circle});
        }
        
        /// <remarks/>
        public void ProcessCircleAsync(AsmxCircle circle) {
            this.ProcessCircleAsync(circle, null);
        }
        
        /// <remarks/>
        public void ProcessCircleAsync(AsmxCircle circle, object userState) {
            if ((this.ProcessCircleOperationCompleted == null)) {
                this.ProcessCircleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessCircleOperationCompleted);
            }
            this.InvokeAsync("ProcessCircle", new object[] {
                        circle}, this.ProcessCircleOperationCompleted, userState);
        }
        
        private void OnProcessCircleOperationCompleted(object arg) {
            if ((this.ProcessCircleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCircleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessDataSet", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProcessDataSet(System.Data.DataSet a) {
            object[] results = this.Invoke("ProcessDataSet", new object[] {
                        a});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessDataSetAsync(System.Data.DataSet a) {
            this.ProcessDataSetAsync(a, null);
        }
        
        /// <remarks/>
        public void ProcessDataSetAsync(System.Data.DataSet a, object userState) {
            if ((this.ProcessDataSetOperationCompleted == null)) {
                this.ProcessDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDataSetOperationCompleted);
            }
            this.InvokeAsync("ProcessDataSet", new object[] {
                        a}, this.ProcessDataSetOperationCompleted, userState);
        }
        
        private void OnProcessDataSetOperationCompleted(object arg) {
            if ((this.ProcessDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDataSetCompleted(this, new ProcessDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessDataSetWithMoreData", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ProcessDataSetWithMoreData(System.Data.DataSet a, int i) {
            object[] results = this.Invoke("ProcessDataSetWithMoreData", new object[] {
                        a,
                        i});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessDataSetWithMoreDataAsync(System.Data.DataSet a, int i) {
            this.ProcessDataSetWithMoreDataAsync(a, i, null);
        }
        
        /// <remarks/>
        public void ProcessDataSetWithMoreDataAsync(System.Data.DataSet a, int i, object userState) {
            if ((this.ProcessDataSetWithMoreDataOperationCompleted == null)) {
                this.ProcessDataSetWithMoreDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessDataSetWithMoreDataOperationCompleted);
            }
            this.InvokeAsync("ProcessDataSetWithMoreData", new object[] {
                        a,
                        i}, this.ProcessDataSetWithMoreDataOperationCompleted, userState);
        }
        
        private void OnProcessDataSetWithMoreDataOperationCompleted(object arg) {
            if ((this.ProcessDataSetWithMoreDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessDataSetWithMoreDataCompleted(this, new ProcessDataSetWithMoreDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessTypedDataSet", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessTypedDataSet(AsmxTypedDataSet data) {
            this.Invoke("ProcessTypedDataSet", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void ProcessTypedDataSetAsync(AsmxTypedDataSet data) {
            this.ProcessTypedDataSetAsync(data, null);
        }
        
        /// <remarks/>
        public void ProcessTypedDataSetAsync(AsmxTypedDataSet data, object userState) {
            if ((this.ProcessTypedDataSetOperationCompleted == null)) {
                this.ProcessTypedDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessTypedDataSetOperationCompleted);
            }
            this.InvokeAsync("ProcessTypedDataSet", new object[] {
                        data}, this.ProcessTypedDataSetOperationCompleted, userState);
        }
        
        private void OnProcessTypedDataSetOperationCompleted(object arg) {
            if ((this.ProcessTypedDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessTypedDataSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessCompoundDataSet", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessCompoundDataSet(AsmxCompoundWithDataSet data) {
            this.Invoke("ProcessCompoundDataSet", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void ProcessCompoundDataSetAsync(AsmxCompoundWithDataSet data) {
            this.ProcessCompoundDataSetAsync(data, null);
        }
        
        /// <remarks/>
        public void ProcessCompoundDataSetAsync(AsmxCompoundWithDataSet data, object userState) {
            if ((this.ProcessCompoundDataSetOperationCompleted == null)) {
                this.ProcessCompoundDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessCompoundDataSetOperationCompleted);
            }
            this.InvokeAsync("ProcessCompoundDataSet", new object[] {
                        data}, this.ProcessCompoundDataSetOperationCompleted, userState);
        }
        
        private void OnProcessCompoundDataSetOperationCompleted(object arg) {
            if ((this.ProcessCompoundDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCompoundDataSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://contoso.com/asmxservice/test/ProcessCompoundTypedDataSet", RequestNamespace="http://contoso.com/asmxservice/test", ResponseNamespace="http://contoso.com/asmxservice/test", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProcessCompoundTypedDataSet(AsmxCompoundWithTypedDataSet data) {
            this.Invoke("ProcessCompoundTypedDataSet", new object[] {
                        data});
        }
        
        /// <remarks/>
        public void ProcessCompoundTypedDataSetAsync(AsmxCompoundWithTypedDataSet data) {
            this.ProcessCompoundTypedDataSetAsync(data, null);
        }
        
        /// <remarks/>
        public void ProcessCompoundTypedDataSetAsync(AsmxCompoundWithTypedDataSet data, object userState) {
            if ((this.ProcessCompoundTypedDataSetOperationCompleted == null)) {
                this.ProcessCompoundTypedDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessCompoundTypedDataSetOperationCompleted);
            }
            this.InvokeAsync("ProcessCompoundTypedDataSet", new object[] {
                        data}, this.ProcessCompoundTypedDataSetOperationCompleted, userState);
        }
        
        private void OnProcessCompoundTypedDataSetOperationCompleted(object arg) {
            if ((this.ProcessCompoundTypedDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCompoundTypedDataSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class SimpleAsmxRequest {
        
        private string bField;
        
        private int optionalField;
        
        private bool optionalFieldSpecified;
        
        private int aField;
        
        /// <remarks/>
        public string B {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
            }
        }
        
        /// <remarks/>
        public int Optional {
            get {
                return this.optionalField;
            }
            set {
                this.optionalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OptionalSpecified {
            get {
                return this.optionalFieldSpecified;
            }
            set {
                this.optionalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int A {
            get {
                return this.aField;
            }
            set {
                this.aField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class AsmxCompoundWithTypedDataSet {
        
        private AsmxTypedDataSet dataField;
        
        /// <remarks/>
        public AsmxTypedDataSet Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("AsmxTypedDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    public partial class AsmxTypedDataSet : global::System.Data.DataSet {
        
        private DataTable1DataTable tableDataTable1;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AsmxTypedDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected AsmxTypedDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DataTable1DataTable DataTable1 {
            get {
                return this.tableDataTable1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            AsmxTypedDataSet cln = ((AsmxTypedDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DataTable1"] != null)) {
                    base.Tables.Add(new DataTable1DataTable(ds.Tables["DataTable1"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDataTable1 = ((DataTable1DataTable)(base.Tables["DataTable1"]));
            if ((initTable == true)) {
                if ((this.tableDataTable1 != null)) {
                    this.tableDataTable1.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "AsmxTypedDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TypedDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDataTable1 = new DataTable1DataTable();
            base.Tables.Add(this.tableDataTable1);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDataTable1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            AsmxTypedDataSet ds = new AsmxTypedDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DataTable1RowChangeEventHandler(object sender, DataTable1RowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DataTable1DataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnDataColumn1;
            
            private global::System.Data.DataColumn columnDataColumn2;
            
            private global::System.Data.DataColumn columnDataColumn3;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1DataTable() {
                this.TableName = "DataTable1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DataTable1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataColumn1Column {
                get {
                    return this.columnDataColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataColumn2Column {
                get {
                    return this.columnDataColumn2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DataColumn3Column {
                get {
                    return this.columnDataColumn3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row this[int index] {
                get {
                    return ((DataTable1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DataTable1RowChangeEventHandler DataTable1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDataTable1Row(DataTable1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row AddDataTable1Row(string DataColumn1, int DataColumn2, System.DateTime DataColumn3) {
                DataTable1Row rowDataTable1Row = ((DataTable1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DataColumn1,
                        DataColumn2,
                        DataColumn3};
                rowDataTable1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowDataTable1Row);
                return rowDataTable1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DataTable1DataTable cln = ((DataTable1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DataTable1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDataColumn1 = base.Columns["DataColumn1"];
                this.columnDataColumn2 = base.Columns["DataColumn2"];
                this.columnDataColumn3 = base.Columns["DataColumn3"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDataColumn1 = new global::System.Data.DataColumn("DataColumn1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn1);
                this.columnDataColumn2 = new global::System.Data.DataColumn("DataColumn2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn2);
                this.columnDataColumn3 = new global::System.Data.DataColumn("DataColumn3", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataColumn3);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row NewDataTable1Row() {
                return ((DataTable1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DataTable1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DataTable1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DataTable1RowChanged != null)) {
                    this.DataTable1RowChanged(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DataTable1RowChanging != null)) {
                    this.DataTable1RowChanging(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DataTable1RowDeleted != null)) {
                    this.DataTable1RowDeleted(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DataTable1RowDeleting != null)) {
                    this.DataTable1RowDeleting(this, new DataTable1RowChangeEvent(((DataTable1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDataTable1Row(DataTable1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                AsmxTypedDataSet ds = new AsmxTypedDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DataTable1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DataTable1Row : global::System.Data.DataRow {
            
            private DataTable1DataTable tableDataTable1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DataTable1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDataTable1 = ((DataTable1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DataColumn1 {
                get {
                    try {
                        return ((string)(this[this.tableDataTable1.DataColumn1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataColumn1\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DataColumn1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DataColumn2 {
                get {
                    try {
                        return ((int)(this[this.tableDataTable1.DataColumn2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataColumn2\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DataColumn2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DataColumn3 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDataTable1.DataColumn3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DataColumn3\' in table \'DataTable1\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDataTable1.DataColumn3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataColumn1Null() {
                return this.IsNull(this.tableDataTable1.DataColumn1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataColumn1Null() {
                this[this.tableDataTable1.DataColumn1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataColumn2Null() {
                return this.IsNull(this.tableDataTable1.DataColumn2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataColumn2Null() {
                this[this.tableDataTable1.DataColumn2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDataColumn3Null() {
                return this.IsNull(this.tableDataTable1.DataColumn3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDataColumn3Null() {
                this[this.tableDataTable1.DataColumn3Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DataTable1RowChangeEvent : global::System.EventArgs {
            
            private DataTable1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1RowChangeEvent(DataTable1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DataTable1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class AsmxCompoundWithDataSet {
        
        private System.Data.DataSet dataField;
        
        /// <remarks/>
        public System.Data.DataSet Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AsmxCircle))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AsmxRectangle))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class AsmxShape {
        
        private int colourField;
        
        /// <remarks/>
        public int Colour {
            get {
                return this.colourField;
            }
            set {
                this.colourField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class AsmxCircle : AsmxShape {
        
        private int radiusField;
        
        private string ignoredField;
        
        /// <remarks/>
        public int Radius {
            get {
                return this.radiusField;
            }
            set {
                this.radiusField = value;
            }
        }
        
        /// <remarks/>
        public string Ignored {
            get {
                return this.ignoredField;
            }
            set {
                this.ignoredField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class AsmxRectangle : AsmxShape {
        
        private int verticalSideLengthField;
        
        private int horizontalSideLengthField;
        
        /// <remarks/>
        public int VerticalSideLength {
            get {
                return this.verticalSideLengthField;
            }
            set {
                this.verticalSideLengthField = value;
            }
        }
        
        /// <remarks/>
        public int HorizontalSideLength {
            get {
                return this.horizontalSideLengthField;
            }
            set {
                this.horizontalSideLengthField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class CollectionsRequest {
        
        private object[] arrayListField;
        
        private int[] intListField;
        
        private SimpleAsmxRequest[] requestListField;
        
        private SimpleAsmxRequest[] requestCollectionField;
        
        private object[] nonGenericEnumerableOnlyCollectionField;
        
        /// <remarks/>
        public object[] ArrayList {
            get {
                return this.arrayListField;
            }
            set {
                this.arrayListField = value;
            }
        }
        
        /// <remarks/>
        public int[] IntList {
            get {
                return this.intListField;
            }
            set {
                this.intListField = value;
            }
        }
        
        /// <remarks/>
        public SimpleAsmxRequest[] RequestList {
            get {
                return this.requestListField;
            }
            set {
                this.requestListField = value;
            }
        }
        
        /// <remarks/>
        public SimpleAsmxRequest[] RequestCollection {
            get {
                return this.requestCollectionField;
            }
            set {
                this.requestCollectionField = value;
            }
        }
        
        /// <remarks/>
        public object[] NonGenericEnumerableOnlyCollection {
            get {
                return this.nonGenericEnumerableOnlyCollectionField;
            }
            set {
                this.nonGenericEnumerableOnlyCollectionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public partial class XmlAsmxRequest {
        
        private System.Xml.XmlElement elementField;
        
        private System.Xml.XmlNode[] nodesField;
        
        /// <remarks/>
        public System.Xml.XmlElement Element {
            get {
                return this.elementField;
            }
            set {
                this.elementField = value;
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode[] Nodes {
            get {
                return this.nodesField;
            }
            set {
                this.nodesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18046")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://contoso.com/asmxservice/test")]
    public enum ConsoleColor {
        
        /// <remarks/>
        Black,
        
        /// <remarks/>
        DarkBlue,
        
        /// <remarks/>
        DarkGreen,
        
        /// <remarks/>
        DarkCyan,
        
        /// <remarks/>
        DarkRed,
        
        /// <remarks/>
        DarkMagenta,
        
        /// <remarks/>
        DarkYellow,
        
        /// <remarks/>
        Gray,
        
        /// <remarks/>
        DarkGray,
        
        /// <remarks/>
        Blue,
        
        /// <remarks/>
        Green,
        
        /// <remarks/>
        Cyan,
        
        /// <remarks/>
        Red,
        
        /// <remarks/>
        Magenta,
        
        /// <remarks/>
        Yellow,
        
        /// <remarks/>
        White,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessSimpleAsmxRequestWrappedCompletedEventHandler(object sender, ProcessSimpleAsmxRequestWrappedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessSimpleAsmxRequestWrappedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessSimpleAsmxRequestWrappedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessMultipleParametersWrappedCompletedEventHandler(object sender, ProcessMultipleParametersWrappedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessMultipleParametersWrappedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessMultipleParametersWrappedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessSimpleAsmxRequestBareCompletedEventHandler(object sender, ProcessSimpleAsmxRequestBareCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessSimpleAsmxRequestBareCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessSimpleAsmxRequestBareCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void SimpleTypesCompletedEventHandler(object sender, SimpleTypesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SimpleTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SimpleTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void WithNullableIntCompletedEventHandler(object sender, WithNullableIntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WithNullableIntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WithNullableIntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ScalarArrayCompletedEventHandler(object sender, ScalarArrayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ScalarArrayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ScalarArrayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void XmlRequestMethodCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CollectionMethodCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessShapeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessCircleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessDataSetCompletedEventHandler(object sender, ProcessDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessDataSetWithMoreDataCompletedEventHandler(object sender, ProcessDataSetWithMoreDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessDataSetWithMoreDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessDataSetWithMoreDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessTypedDataSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessCompoundDataSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void ProcessCompoundTypedDataSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591