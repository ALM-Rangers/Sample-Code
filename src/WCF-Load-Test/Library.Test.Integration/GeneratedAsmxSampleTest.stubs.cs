//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeneratedAsmxSampleTest
{
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using System.Collections.Generic;
    
    
    public partial class GeneratedAsmxSampleTestTests
    {
        
        private static Dictionary<int, GeneratedContractsAsmx.TestAsmxServiceSoap> testAsmxServiceSoapProxyTable = new Dictionary<int, GeneratedContractsAsmx.TestAsmxServiceSoap>();
        
        [TestInitialize()]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Reliability", "CA2000:Dispose objects before losing scope", Justification = "proxy should not be disposed")]
        public void InitializeTest()
        {
            System.Threading.Monitor.Enter(testAsmxServiceSoapProxyTable);
            try
            {
                testAsmxServiceSoapProxyTable.TryGetValue(System.Threading.Thread.CurrentThread.ManagedThreadId, out testAsmxServiceSoapClient);
                if (((testAsmxServiceSoapClient == null) 
                            || (((System.ServiceModel.ICommunicationObject)(testAsmxServiceSoapClient)).State == System.ServiceModel.CommunicationState.Faulted)))
                {
                    // The following line may need to be customised to select the appropriate binding from the configuration file
                    testAsmxServiceSoapClient = new GeneratedContractsAsmx.TestAsmxServiceSoapClient();
                    ((System.ServiceModel.ICommunicationObject)(testAsmxServiceSoapClient)).Open();
                    testAsmxServiceSoapProxyTable[System.Threading.Thread.CurrentThread.ManagedThreadId] = testAsmxServiceSoapClient;
                }
            }
            finally
            {
                System.Threading.Monitor.Exit(testAsmxServiceSoapProxyTable);
            }
        }
        
        private void CustomiseProcessSimpleAsmxRequestWrapped(GeneratedContractsAsmx.SimpleAsmxRequest r)
        {
        }
        
        private void CustomiseProcessSimpleAsmxRequestBare(GeneratedContractsAsmx.ProcessSimpleAsmxRequestBareRequest request)
        {
        }
        
        private void CustomiseProcessMultipleParametersWrapped(ref int a, ref string b)
        {
        }
        
        private void CustomiseProcessSimpleAsmxRequestWrapped2(GeneratedContractsAsmx.SimpleAsmxRequest r)
        {
        }
        
        private void CustomiseProcessSimpleAsmxRequestBare2(GeneratedContractsAsmx.ProcessSimpleAsmxRequestBareRequest request)
        {
        }
        
        private void CustomiseProcessMultipleParametersWrapped2(ref int a, ref string b)
        {
        }

        private void CustomiseWithNullableInt(GeneratedContractsAsmx.WithNullableIntRequest request)
        {
        }

        private void CustomiseWithNullableInt2(GeneratedContractsAsmx.WithNullableIntRequest request)
        {
        }

        private void CustomiseSimpleTypes(ref int i, ref GeneratedContractsAsmx.ConsoleColor e, ref string s, ref decimal d, ref System.DateTime dt, ref System.Guid g, System.Xml.XmlQualifiedName xqn)
        {
        }

        private void CustomiseScalarArray(int[] a)
        {
        }

        private void CustomiseXmlRequestMethod(GeneratedContractsAsmx.XmlAsmxRequest request)
        {
        }

        private void CustomiseCollectionMethod(GeneratedContractsAsmx.CollectionsRequest data)
        {
        }

        private void CustomiseProcessShape(GeneratedContractsAsmx.AsmxShape shape)
        {
        }

        private void CustomiseProcessDataSet(System.Data.DataSet a)
        {
        }

        private void CustomiseProcessDataSetWithMoreData(System.Data.DataSet a, ref int i)
        {
        }

        private void CustomiseProcessCompoundDataSet(GeneratedContractsAsmx.AsmxCompoundWithDataSet data)
        {
        }

        private void CustomiseProcessTypedDataSet(GeneratedContractsAsmx.AsmxTypedDataSet data)
        {
        }

        private void CustomiseProcessCompoundTypedDataSet(GeneratedContractsAsmx.AsmxCompoundWithTypedDataSet data)
        {
        }
    }
}
