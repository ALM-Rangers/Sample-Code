//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18046
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.WcfUnit.VSIntegration {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class DialogResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DialogResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.WcfUnit.VSIntegration.DialogResources", typeof(DialogResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the executable which runs the WCF scenario you wish to capture, or choose a pre-captured message log file..
        /// </summary>
        internal static string RunScenarioFormDescription {
            get {
                return ResourceManager.GetString("RunScenarioFormDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Run button to execute the client program so that the wizard can capture the message log. You must do this before the wizard can continue..
        /// </summary>
        internal static string RunScenarioRunButtonDescription {
            get {
                return ResourceManager.GetString("RunScenarioRunButtonDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Capture the message log.
        /// </summary>
        internal static string RunScenarioSummary {
            get {
                return ResourceManager.GetString("RunScenarioSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the assemblies that contain the contracts, if a proxy exists and is to be used in the generated code then include the assembly that contains the proxy as well..
        /// </summary>
        internal static string SelectAssembliesFormDescription {
            get {
                return ResourceManager.GetString("SelectAssembliesFormDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the assemblies.
        /// </summary>
        internal static string SelectAssembliesSummary {
            get {
                return ResourceManager.GetString("SelectAssembliesSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the SOAP actions to include in the scenario, and also select other options.
        /// </summary>
        internal static string SetOptionsFormDescription {
            get {
                return ResourceManager.GetString("SetOptionsFormDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the options.
        /// </summary>
        internal static string SetOptionsSummary {
            get {
                return ResourceManager.GetString("SetOptionsSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use this wizard to turn a WCF message log into a unit test that re-creates the same sequence of WCF calls found in the message log. The message log can either be captured by the wizard by executing a WCF client, or a pre-captured message log can be used..
        /// </summary>
        internal static string WelcomeFormDescriptionSummary {
            get {
                return ResourceManager.GetString("WelcomeFormDescriptionSummary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the New WCF Scenario Test Generation Wizard.
        /// </summary>
        internal static string WelcomeSummary {
            get {
                return ResourceManager.GetString("WelcomeSummary", resourceCulture);
            }
        }
    }
}
