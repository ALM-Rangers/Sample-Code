// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// PlayKeyboardBack - Use 'PlayKeyboardBackParams' to pass parameters into this method.
        /// </summary>
        public void PlayKeyboardBack()
        {
            #region Variable Declarations
            WinTitleBar uIItemTitleBar = this.UIDocument1MicrosoftWoWindow.UIItemWindow.UIRibbonPropertyPage.UIItemTitleBar;
            UITestControl uIDocument1Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document;
            #endregion

            // Launch '%ProgramFiles%\Microsoft Office\Office14\WINWORD.EXE'
            ApplicationUnderTest wINWORDApplication = ApplicationUnderTest.Launch(this.PlayKeyboardBackParams.ExePath, this.PlayKeyboardBackParams.AlternateExePath);

            // Click 'Unknown Name' title bar
            Mouse.Click(uIItemTitleBar, new Point(517, 16));

            // Type 'Please record this and play it back!' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.PlayKeyboardBackParams.UIDocument1DocumentSendKeys, ModifierKeys.None);
        }
        
        /// <summary>
        /// HighlightKeyboardPlayback - Use 'HighlightKeyboardPlaybackParams' to pass parameters into this method.
        /// </summary>
        public void HighlightKeyboardPlayback()
        {
            #region Variable Declarations
            WinTitleBar uIItemTitleBar = this.UIDocument1MicrosoftWoWindow.UIItemWindow.UIRibbonPropertyPage.UIItemTitleBar;
            UITestControl uIDocument1Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document;
            #endregion

            // Click 'Unknown Name' title bar
            Mouse.Click(uIItemTitleBar, new Point(547, 21));

            // Type '{Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.HighlightKeyboardPlaybackParams.UIDocument1DocumentSendKeys, ModifierKeys.None);

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.HighlightKeyboardPlaybackParams.UIDocument1DocumentSendKeys1, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.HighlightKeyboardPlaybackParams.UIDocument1DocumentSendKeys2, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.HighlightKeyboardPlaybackParams.UIDocument1DocumentSendKeys3, (ModifierKeys.Control | ModifierKeys.Shift));
        }
        
        /// <summary>
        /// PlayMouseClickBack - Use 'PlayMouseClickBackParams' to pass parameters into this method.
        /// </summary>
        public void PlayMouseClickBack()
        {
            #region Variable Declarations
            WinTitleBar uIItemTitleBar = this.UIDocument1MicrosoftWoWindow.UIItemWindow.UIRibbonPropertyPage.UIItemTitleBar;
            UITestControl uIDocument12335Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document.UIDocument12335Document;
            UITestControl uIDocument1Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document;
            #endregion

            // Click 'Unknown Name' title bar
            Mouse.Click(uIItemTitleBar, new Point(422, 13));

            // Click 'Document1[23, 35]' document
            Mouse.Click(uIDocument12335Document, new Point(26, 9));

            // Type 'Control + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.PlayMouseClickBackParams.UIDocument1DocumentSendKeys, ModifierKeys.Control);

            // Type 'Control + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.PlayMouseClickBackParams.UIDocument1DocumentSendKeys1, ModifierKeys.Control);

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.PlayMouseClickBackParams.UIDocument1DocumentSendKeys2, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.PlayMouseClickBackParams.UIDocument1DocumentSendKeys3, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.PlayMouseClickBackParams.UIDocument1DocumentSendKeys4, (ModifierKeys.Control | ModifierKeys.Shift));
        }
        
        /// <summary>
        /// TestSelectionAssertion - Use 'TestSelectionAssertionExpectedValues' to pass parameters into this method.
        /// </summary>
        public void TestSelectionAssertion()
        {
            #region Variable Declarations
            UITestControl uIDocument12335Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document.UIDocument12335Document;
            #endregion

            // Verify that 'Document1[23, 35]' document's property 'Text' equals 'play it back'
            Assert.AreEqual(this.TestSelectionAssertionExpectedValues.UIDocument12335DocumentText, uIDocument12335Document.GetProperty("Text").ToString());
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            UITestControl uIDocument1Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document;
            #endregion

            // Launch '%ProgramFiles(x86)%\Microsoft Office\Office14\WINWORD.EXE'
            ApplicationUnderTest wINWORDApplication = ApplicationUnderTest.Launch(this.RecordedMethod1Params.ExePath, this.RecordedMethod1Params.AlternateExePath);

            // Type 'Test' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.RecordedMethod1Params.UIDocument1DocumentSendKeys, ModifierKeys.None);

            // Type ' wor{Back}{Back}{Back}Word Add-in on selected Word Content{Back}{Back}{Back}{Back}{Back}{Back}{Back}content' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.RecordedMethod1Params.UIDocument1DocumentSendKeys1, ModifierKeys.None);
        }
        
        /// <summary>
        /// MseClickNotOnSelect
        /// </summary>
        public void MseClickNotOnSelect()
        {
            #region Variable Declarations
            WinTitleBar uIItemTitleBar = this.UIDocument1MicrosoftWoWindow.UIItemWindow.UIRibbonPropertyPage.UIItemTitleBar;
            UITestControl uIDocument12335Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document.UIDocument12335Document;
            #endregion

            // Click 'Unknown Name' title bar
            Mouse.Click(uIItemTitleBar, new Point(392, 12));

            // Click 'Document1[23, 35]' document
            Mouse.Click(uIDocument12335Document, new Point(-76, 8));
        }
        
        /// <summary>
        /// LotsOfKeyboardClicksControls - Use 'LotsOfKeyboardClicksControlsParams' to pass parameters into this method.
        /// </summary>
        public void LotsOfKeyboardClicksControls()
        {
            #region Variable Declarations
            WinTitleBar uIItemTitleBar = this.UIDocument1MicrosoftWoWindow.UIItemWindow.UIRibbonPropertyPage.UIItemTitleBar;
            UITestControl uIDocument1Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document;
            #endregion

            // Click 'Unknown Name' title bar
            Mouse.Click(uIItemTitleBar, new Point(475, 20));

            // Type '{End}{Enter}Type in more text' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys, ModifierKeys.None);

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys1, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys2, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys3, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys4, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control + C' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys5, ModifierKeys.Control);

            // Type '{End}{Enter}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys6, ModifierKeys.None);

            // Type 'Control + V' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys7, ModifierKeys.Control);

            // Type 'Control + V' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys8, ModifierKeys.Control);

            // Type 'Control + {Home}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys9, ModifierKeys.Control);

            // Type 'Control, Shift + {End}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys10, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type '{Home}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys11, ModifierKeys.None);

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys12, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys13, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys14, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys15, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys16, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys17, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys18, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Control, Shift + {Right}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys19, (ModifierKeys.Control | ModifierKeys.Shift));

            // Type 'Shift + {Left}' in 'Document1' document
            Keyboard.SendKeys(uIDocument1Document, this.LotsOfKeyboardClicksControlsParams.UIDocument1DocumentSendKeys20, ModifierKeys.Shift);
        }
        
        /// <summary>
        /// Assert1stLine - Use 'Assert1stLineExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert1stLine()
        {
            #region Variable Declarations
            UITestControl uIDocument1036Document = this.UIDocument1MicrosoftWoWindow.UIMicrosoftWordDocumenWindow.UIDocument1Document.UIDocument1036Document;
            #endregion

            // Verify that 'Document1[0, 36]' document's property 'StartIndex' equals '0'
            Assert.AreEqual(this.Assert1stLineExpectedValues.UIDocument1036DocumentStartIndex, uIDocument1036Document.GetProperty("StartIndex"));
        }
        
        #region Properties
        public virtual PlayKeyboardBackParams PlayKeyboardBackParams
        {
            get
            {
                if ((this.mPlayKeyboardBackParams == null))
                {
                    this.mPlayKeyboardBackParams = new PlayKeyboardBackParams();
                }
                return this.mPlayKeyboardBackParams;
            }
        }
        
        public virtual HighlightKeyboardPlaybackParams HighlightKeyboardPlaybackParams
        {
            get
            {
                if ((this.mHighlightKeyboardPlaybackParams == null))
                {
                    this.mHighlightKeyboardPlaybackParams = new HighlightKeyboardPlaybackParams();
                }
                return this.mHighlightKeyboardPlaybackParams;
            }
        }
        
        public virtual PlayMouseClickBackParams PlayMouseClickBackParams
        {
            get
            {
                if ((this.mPlayMouseClickBackParams == null))
                {
                    this.mPlayMouseClickBackParams = new PlayMouseClickBackParams();
                }
                return this.mPlayMouseClickBackParams;
            }
        }
        
        public virtual TestSelectionAssertionExpectedValues TestSelectionAssertionExpectedValues
        {
            get
            {
                if ((this.mTestSelectionAssertionExpectedValues == null))
                {
                    this.mTestSelectionAssertionExpectedValues = new TestSelectionAssertionExpectedValues();
                }
                return this.mTestSelectionAssertionExpectedValues;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual LotsOfKeyboardClicksControlsParams LotsOfKeyboardClicksControlsParams
        {
            get
            {
                if ((this.mLotsOfKeyboardClicksControlsParams == null))
                {
                    this.mLotsOfKeyboardClicksControlsParams = new LotsOfKeyboardClicksControlsParams();
                }
                return this.mLotsOfKeyboardClicksControlsParams;
            }
        }
        
        public virtual Assert1stLineExpectedValues Assert1stLineExpectedValues
        {
            get
            {
                if ((this.mAssert1stLineExpectedValues == null))
                {
                    this.mAssert1stLineExpectedValues = new Assert1stLineExpectedValues();
                }
                return this.mAssert1stLineExpectedValues;
            }
        }
        
        public UIDocument1MicrosoftWoWindow UIDocument1MicrosoftWoWindow
        {
            get
            {
                if ((this.mUIDocument1MicrosoftWoWindow == null))
                {
                    this.mUIDocument1MicrosoftWoWindow = new UIDocument1MicrosoftWoWindow();
                }
                return this.mUIDocument1MicrosoftWoWindow;
            }
        }
        
        public UISaveAsWindow UISaveAsWindow
        {
            get
            {
                if ((this.mUISaveAsWindow == null))
                {
                    this.mUISaveAsWindow = new UISaveAsWindow();
                }
                return this.mUISaveAsWindow;
            }
        }
        
        public UIDocument2MicrosoftWoWindow UIDocument2MicrosoftWoWindow
        {
            get
            {
                if ((this.mUIDocument2MicrosoftWoWindow == null))
                {
                    this.mUIDocument2MicrosoftWoWindow = new UIDocument2MicrosoftWoWindow();
                }
                return this.mUIDocument2MicrosoftWoWindow;
            }
        }
        #endregion
        
        #region Fields
        private PlayKeyboardBackParams mPlayKeyboardBackParams;
        
        private HighlightKeyboardPlaybackParams mHighlightKeyboardPlaybackParams;
        
        private PlayMouseClickBackParams mPlayMouseClickBackParams;
        
        private TestSelectionAssertionExpectedValues mTestSelectionAssertionExpectedValues;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private LotsOfKeyboardClicksControlsParams mLotsOfKeyboardClicksControlsParams;
        
        private Assert1stLineExpectedValues mAssert1stLineExpectedValues;
        
        private UIDocument1MicrosoftWoWindow mUIDocument1MicrosoftWoWindow;
        
        private UISaveAsWindow mUISaveAsWindow;
        
        private UIDocument2MicrosoftWoWindow mUIDocument2MicrosoftWoWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PlayKeyboardBack'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class PlayKeyboardBackParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Office\Office14\WINWORD.EXE'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Microsoft Office\\Office14\\WINWORD.EXE";
        
        /// <summary>
        /// Launch '%ProgramFiles%\Microsoft Office\Office14\WINWORD.EXE'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles%\\Microsoft Office\\Office14\\WINWORD.EXE";
        
        /// <summary>
        /// Type 'Please record this and play it back!' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys = "Please record this and play it back!";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'HighlightKeyboardPlayback'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class HighlightKeyboardPlaybackParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys1 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys2 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys3 = "{Left}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PlayMouseClickBack'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class PlayMouseClickBackParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Control + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys = "{Right}";
        
        /// <summary>
        /// Type 'Control + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys1 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys2 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys3 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys4 = "{Left}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'TestSelectionAssertion'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class TestSelectionAssertionExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Document1[23, 35]' document's property 'Text' equals 'play it back'
        /// </summary>
        public string UIDocument12335DocumentText = "play it back";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Microsoft Office\Office14\WINWORD.EXE'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Microsoft Office\\Office14\\WINWORD.EXE";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Microsoft Office\Office14\WINWORD.EXE'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Microsoft Office\\Office14\\WINWORD.EXE";
        
        /// <summary>
        /// Type 'Test' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys = "Test";
        
        /// <summary>
        /// Type ' wor{Back}{Back}{Back}Word Add-in on selected Word Content{Back}{Back}{Back}{Back}{Back}{Back}{Back}content' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys1 = " wor{Back}{Back}{Back}Word Add-in on selected Word Content{Back}{Back}{Back}{Back" + "}{Back}{Back}{Back}content";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LotsOfKeyboardClicksControls'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class LotsOfKeyboardClicksControlsParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{End}{Enter}Type in more text' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys = "{End}{Enter}Type in more text";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys1 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys2 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys3 = "{Left}";
        
        /// <summary>
        /// Type 'Control, Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys4 = "{Left}";
        
        /// <summary>
        /// Type 'Control + C' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys5 = "C";
        
        /// <summary>
        /// Type '{End}{Enter}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys6 = "{End}{Enter}";
        
        /// <summary>
        /// Type 'Control + V' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys7 = "V";
        
        /// <summary>
        /// Type 'Control + V' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys8 = "V";
        
        /// <summary>
        /// Type 'Control + {Home}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys9 = "{Home}";
        
        /// <summary>
        /// Type 'Control, Shift + {End}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys10 = "{End}";
        
        /// <summary>
        /// Type '{Home}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys11 = "{Home}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys12 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys13 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys14 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys15 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys16 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys17 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys18 = "{Right}";
        
        /// <summary>
        /// Type 'Control, Shift + {Right}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys19 = "{Right}";
        
        /// <summary>
        /// Type 'Shift + {Left}' in 'Document1' document
        /// </summary>
        public string UIDocument1DocumentSendKeys20 = "{Left}";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert1stLine'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class Assert1stLineExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Document1[0, 36]' document's property 'StartIndex' equals '0'
        /// </summary>
        public int UIDocument1036DocumentStartIndex = 0;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDocument1MicrosoftWoWindow : WinWindow
    {
        
        public UIDocument1MicrosoftWoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document1 - Microsoft Word";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "OpusApp";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIMicrosoftWordDocumenWindow UIMicrosoftWordDocumenWindow
        {
            get
            {
                if ((this.mUIMicrosoftWordDocumenWindow == null))
                {
                    this.mUIMicrosoftWordDocumenWindow = new UIMicrosoftWordDocumenWindow(this);
                }
                return this.mUIMicrosoftWordDocumenWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDocument1Client UIDocument1Client
        {
            get
            {
                if ((this.mUIDocument1Client == null))
                {
                    this.mUIDocument1Client = new UIDocument1Client(this);
                }
                return this.mUIDocument1Client;
            }
        }
        
        public UIFileMenuBar UIFileMenuBar
        {
            get
            {
                if ((this.mUIFileMenuBar == null))
                {
                    this.mUIFileMenuBar = new UIFileMenuBar(this);
                }
                return this.mUIFileMenuBar;
            }
        }
        
        public UIFileMenuBar1 UIFileMenuBar1
        {
            get
            {
                if ((this.mUIFileMenuBar1 == null))
                {
                    this.mUIFileMenuBar1 = new UIFileMenuBar1(this);
                }
                return this.mUIFileMenuBar1;
            }
        }
        
        public UIAvailableTemplatesClient UIAvailableTemplatesClient
        {
            get
            {
                if ((this.mUIAvailableTemplatesClient == null))
                {
                    this.mUIAvailableTemplatesClient = new UIAvailableTemplatesClient(this);
                }
                return this.mUIAvailableTemplatesClient;
            }
        }
        
        public UITemplatePreviewInforGroup UITemplatePreviewInforGroup
        {
            get
            {
                if ((this.mUITemplatePreviewInforGroup == null))
                {
                    this.mUITemplatePreviewInforGroup = new UITemplatePreviewInforGroup(this);
                }
                return this.mUITemplatePreviewInforGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIMicrosoftWordDocumenWindow mUIMicrosoftWordDocumenWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIDocument1Client mUIDocument1Client;
        
        private UIFileMenuBar mUIFileMenuBar;
        
        private UIFileMenuBar1 mUIFileMenuBar1;
        
        private UIAvailableTemplatesClient mUIAvailableTemplatesClient;
        
        private UITemplatePreviewInforGroup mUITemplatePreviewInforGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIMicrosoftWordDocumenWindow : WinWindow
    {
        
        public UIMicrosoftWordDocumenWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Microsoft Word Document";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "_WwG";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIDocument1Document UIDocument1Document
        {
            get
            {
                if ((this.mUIDocument1Document == null))
                {
                    this.mUIDocument1Document = new UIDocument1Document(this);
                }
                return this.mUIDocument1Document;
            }
        }
        #endregion
        
        #region Fields
        private UIDocument1Document mUIDocument1Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDocument1Document : UITestControl
    {
        
        public UIDocument1Document(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.TechnologyName = "Word";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Document1";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UITestControl UIDocument1016Document
        {
            get
            {
                if ((this.mUIDocument1016Document == null))
                {
                    this.mUIDocument1016Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1016Document.TechnologyName = "Word";
                    this.mUIDocument1016Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1016Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1016Document.SearchProperties["EndIndex"] = "16";
                    this.mUIDocument1016Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1016Document;
            }
        }
        
        public UITestControl UIDocument1023Document
        {
            get
            {
                if ((this.mUIDocument1023Document == null))
                {
                    this.mUIDocument1023Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1023Document.TechnologyName = "Word";
                    this.mUIDocument1023Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1023Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1023Document.SearchProperties["EndIndex"] = "23";
                    this.mUIDocument1023Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1023Document;
            }
        }
        
        public UITestControl UIDocument1030Document
        {
            get
            {
                if ((this.mUIDocument1030Document == null))
                {
                    this.mUIDocument1030Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1030Document.TechnologyName = "Word";
                    this.mUIDocument1030Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1030Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1030Document.SearchProperties["EndIndex"] = "30";
                    this.mUIDocument1030Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1030Document;
            }
        }
        
        public UITestControl UIDocument101Document
        {
            get
            {
                if ((this.mUIDocument101Document == null))
                {
                    this.mUIDocument101Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument101Document.TechnologyName = "Word";
                    this.mUIDocument101Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument101Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument101Document.SearchProperties["EndIndex"] = "1";
                    this.mUIDocument101Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument101Document;
            }
        }
        
        public UITestControl UIDocument102Document
        {
            get
            {
                if ((this.mUIDocument102Document == null))
                {
                    this.mUIDocument102Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument102Document.TechnologyName = "Word";
                    this.mUIDocument102Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument102Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument102Document.SearchProperties["EndIndex"] = "2";
                    this.mUIDocument102Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument102Document;
            }
        }
        
        public UITestControl UIDocument103Document
        {
            get
            {
                if ((this.mUIDocument103Document == null))
                {
                    this.mUIDocument103Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument103Document.TechnologyName = "Word";
                    this.mUIDocument103Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument103Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument103Document.SearchProperties["EndIndex"] = "3";
                    this.mUIDocument103Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument103Document;
            }
        }
        
        public UITestControl UIDocument104Document
        {
            get
            {
                if ((this.mUIDocument104Document == null))
                {
                    this.mUIDocument104Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument104Document.TechnologyName = "Word";
                    this.mUIDocument104Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument104Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument104Document.SearchProperties["EndIndex"] = "4";
                    this.mUIDocument104Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument104Document;
            }
        }
        
        public UITestControl UIDocument105Document
        {
            get
            {
                if ((this.mUIDocument105Document == null))
                {
                    this.mUIDocument105Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument105Document.TechnologyName = "Word";
                    this.mUIDocument105Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument105Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument105Document.SearchProperties["EndIndex"] = "5";
                    this.mUIDocument105Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument105Document;
            }
        }
        
        public UITestControl UIDocument106Document
        {
            get
            {
                if ((this.mUIDocument106Document == null))
                {
                    this.mUIDocument106Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument106Document.TechnologyName = "Word";
                    this.mUIDocument106Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument106Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument106Document.SearchProperties["EndIndex"] = "6";
                    this.mUIDocument106Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument106Document;
            }
        }
        
        public UITestControl UIDocument107Document
        {
            get
            {
                if ((this.mUIDocument107Document == null))
                {
                    this.mUIDocument107Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument107Document.TechnologyName = "Word";
                    this.mUIDocument107Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument107Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument107Document.SearchProperties["EndIndex"] = "7";
                    this.mUIDocument107Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument107Document;
            }
        }
        
        public UITestControl UIDocument108Document
        {
            get
            {
                if ((this.mUIDocument108Document == null))
                {
                    this.mUIDocument108Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument108Document.TechnologyName = "Word";
                    this.mUIDocument108Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument108Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument108Document.SearchProperties["EndIndex"] = "8";
                    this.mUIDocument108Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument108Document;
            }
        }
        
        public UITestControl UIDocument109Document
        {
            get
            {
                if ((this.mUIDocument109Document == null))
                {
                    this.mUIDocument109Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument109Document.TechnologyName = "Word";
                    this.mUIDocument109Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument109Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument109Document.SearchProperties["EndIndex"] = "9";
                    this.mUIDocument109Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument109Document;
            }
        }
        
        public UITestControl UIDocument1010Document
        {
            get
            {
                if ((this.mUIDocument1010Document == null))
                {
                    this.mUIDocument1010Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1010Document.TechnologyName = "Word";
                    this.mUIDocument1010Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1010Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1010Document.SearchProperties["EndIndex"] = "10";
                    this.mUIDocument1010Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1010Document;
            }
        }
        
        public UITestControl UIDocument1011Document
        {
            get
            {
                if ((this.mUIDocument1011Document == null))
                {
                    this.mUIDocument1011Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1011Document.TechnologyName = "Word";
                    this.mUIDocument1011Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1011Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1011Document.SearchProperties["EndIndex"] = "11";
                    this.mUIDocument1011Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1011Document;
            }
        }
        
        public UITestControl UIDocument1012Document
        {
            get
            {
                if ((this.mUIDocument1012Document == null))
                {
                    this.mUIDocument1012Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1012Document.TechnologyName = "Word";
                    this.mUIDocument1012Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1012Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1012Document.SearchProperties["EndIndex"] = "12";
                    this.mUIDocument1012Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1012Document;
            }
        }
        
        public UITestControl UIDocument1013Document
        {
            get
            {
                if ((this.mUIDocument1013Document == null))
                {
                    this.mUIDocument1013Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1013Document.TechnologyName = "Word";
                    this.mUIDocument1013Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1013Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1013Document.SearchProperties["EndIndex"] = "13";
                    this.mUIDocument1013Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1013Document;
            }
        }
        
        public UITestControl UIDocument1014Document
        {
            get
            {
                if ((this.mUIDocument1014Document == null))
                {
                    this.mUIDocument1014Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1014Document.TechnologyName = "Word";
                    this.mUIDocument1014Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1014Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1014Document.SearchProperties["EndIndex"] = "14";
                    this.mUIDocument1014Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1014Document;
            }
        }
        
        public UITestControl UIDocument1015Document
        {
            get
            {
                if ((this.mUIDocument1015Document == null))
                {
                    this.mUIDocument1015Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1015Document.TechnologyName = "Word";
                    this.mUIDocument1015Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1015Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1015Document.SearchProperties["EndIndex"] = "15";
                    this.mUIDocument1015Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1015Document;
            }
        }
        
        public UITestControl UIDocument1017Document
        {
            get
            {
                if ((this.mUIDocument1017Document == null))
                {
                    this.mUIDocument1017Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1017Document.TechnologyName = "Word";
                    this.mUIDocument1017Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1017Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1017Document.SearchProperties["EndIndex"] = "17";
                    this.mUIDocument1017Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1017Document;
            }
        }
        
        public UITestControl UIDocument1018Document
        {
            get
            {
                if ((this.mUIDocument1018Document == null))
                {
                    this.mUIDocument1018Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1018Document.TechnologyName = "Word";
                    this.mUIDocument1018Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1018Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1018Document.SearchProperties["EndIndex"] = "18";
                    this.mUIDocument1018Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1018Document;
            }
        }
        
        public UITestControl UIDocument1019Document
        {
            get
            {
                if ((this.mUIDocument1019Document == null))
                {
                    this.mUIDocument1019Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1019Document.TechnologyName = "Word";
                    this.mUIDocument1019Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1019Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1019Document.SearchProperties["EndIndex"] = "19";
                    this.mUIDocument1019Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1019Document;
            }
        }
        
        public UITestControl UIDocument1020Document
        {
            get
            {
                if ((this.mUIDocument1020Document == null))
                {
                    this.mUIDocument1020Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1020Document.TechnologyName = "Word";
                    this.mUIDocument1020Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1020Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1020Document.SearchProperties["EndIndex"] = "20";
                    this.mUIDocument1020Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1020Document;
            }
        }
        
        public UITestControl UIDocument1021Document
        {
            get
            {
                if ((this.mUIDocument1021Document == null))
                {
                    this.mUIDocument1021Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1021Document.TechnologyName = "Word";
                    this.mUIDocument1021Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1021Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1021Document.SearchProperties["EndIndex"] = "21";
                    this.mUIDocument1021Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1021Document;
            }
        }
        
        public UITestControl UIDocument1022Document
        {
            get
            {
                if ((this.mUIDocument1022Document == null))
                {
                    this.mUIDocument1022Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1022Document.TechnologyName = "Word";
                    this.mUIDocument1022Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1022Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1022Document.SearchProperties["EndIndex"] = "22";
                    this.mUIDocument1022Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1022Document;
            }
        }
        
        public UITestControl UIDocument1024Document
        {
            get
            {
                if ((this.mUIDocument1024Document == null))
                {
                    this.mUIDocument1024Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1024Document.TechnologyName = "Word";
                    this.mUIDocument1024Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1024Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1024Document.SearchProperties["EndIndex"] = "24";
                    this.mUIDocument1024Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1024Document;
            }
        }
        
        public UITestControl UIDocument1025Document
        {
            get
            {
                if ((this.mUIDocument1025Document == null))
                {
                    this.mUIDocument1025Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1025Document.TechnologyName = "Word";
                    this.mUIDocument1025Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1025Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1025Document.SearchProperties["EndIndex"] = "25";
                    this.mUIDocument1025Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1025Document;
            }
        }
        
        public UITestControl UIDocument1026Document
        {
            get
            {
                if ((this.mUIDocument1026Document == null))
                {
                    this.mUIDocument1026Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1026Document.TechnologyName = "Word";
                    this.mUIDocument1026Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1026Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1026Document.SearchProperties["EndIndex"] = "26";
                    this.mUIDocument1026Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1026Document;
            }
        }
        
        public UITestControl UIDocument1027Document
        {
            get
            {
                if ((this.mUIDocument1027Document == null))
                {
                    this.mUIDocument1027Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1027Document.TechnologyName = "Word";
                    this.mUIDocument1027Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1027Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1027Document.SearchProperties["EndIndex"] = "27";
                    this.mUIDocument1027Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1027Document;
            }
        }
        
        public UITestControl UIDocument1028Document
        {
            get
            {
                if ((this.mUIDocument1028Document == null))
                {
                    this.mUIDocument1028Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1028Document.TechnologyName = "Word";
                    this.mUIDocument1028Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1028Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1028Document.SearchProperties["EndIndex"] = "28";
                    this.mUIDocument1028Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1028Document;
            }
        }
        
        public UITestControl UIDocument1029Document
        {
            get
            {
                if ((this.mUIDocument1029Document == null))
                {
                    this.mUIDocument1029Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1029Document.TechnologyName = "Word";
                    this.mUIDocument1029Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1029Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1029Document.SearchProperties["EndIndex"] = "29";
                    this.mUIDocument1029Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1029Document;
            }
        }
        
        public UITestControl UIDocument1031Document
        {
            get
            {
                if ((this.mUIDocument1031Document == null))
                {
                    this.mUIDocument1031Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1031Document.TechnologyName = "Word";
                    this.mUIDocument1031Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1031Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1031Document.SearchProperties["EndIndex"] = "31";
                    this.mUIDocument1031Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1031Document;
            }
        }
        
        public UITestControl UIDocument1032Document
        {
            get
            {
                if ((this.mUIDocument1032Document == null))
                {
                    this.mUIDocument1032Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1032Document.TechnologyName = "Word";
                    this.mUIDocument1032Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1032Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1032Document.SearchProperties["EndIndex"] = "32";
                    this.mUIDocument1032Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1032Document;
            }
        }
        
        public UITestControl UIDocument1033Document
        {
            get
            {
                if ((this.mUIDocument1033Document == null))
                {
                    this.mUIDocument1033Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1033Document.TechnologyName = "Word";
                    this.mUIDocument1033Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1033Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1033Document.SearchProperties["EndIndex"] = "33";
                    this.mUIDocument1033Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1033Document;
            }
        }
        
        public UITestControl UIDocument1034Document
        {
            get
            {
                if ((this.mUIDocument1034Document == null))
                {
                    this.mUIDocument1034Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1034Document.TechnologyName = "Word";
                    this.mUIDocument1034Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1034Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1034Document.SearchProperties["EndIndex"] = "34";
                    this.mUIDocument1034Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1034Document;
            }
        }
        
        public UITestControl UIDocument1035Document
        {
            get
            {
                if ((this.mUIDocument1035Document == null))
                {
                    this.mUIDocument1035Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1035Document.TechnologyName = "Word";
                    this.mUIDocument1035Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1035Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1035Document.SearchProperties["EndIndex"] = "35";
                    this.mUIDocument1035Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1035Document;
            }
        }
        
        public UITestControl UIDocument1036Document
        {
            get
            {
                if ((this.mUIDocument1036Document == null))
                {
                    this.mUIDocument1036Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1036Document.TechnologyName = "Word";
                    this.mUIDocument1036Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1036Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1036Document.SearchProperties["EndIndex"] = "36";
                    this.mUIDocument1036Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1036Document;
            }
        }
        
        public UITestControl UIDocument1037Document
        {
            get
            {
                if ((this.mUIDocument1037Document == null))
                {
                    this.mUIDocument1037Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument1037Document.TechnologyName = "Word";
                    this.mUIDocument1037Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument1037Document.SearchProperties["StartIndex"] = "0";
                    this.mUIDocument1037Document.SearchProperties["EndIndex"] = "37";
                    this.mUIDocument1037Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument1037Document;
            }
        }
        
        public UITestControl UIDocument12335Document
        {
            get
            {
                if ((this.mUIDocument12335Document == null))
                {
                    this.mUIDocument12335Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument12335Document.TechnologyName = "Word";
                    this.mUIDocument12335Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument12335Document.SearchProperties["StartIndex"] = "23";
                    this.mUIDocument12335Document.SearchProperties["EndIndex"] = "35";
                    this.mUIDocument12335Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument12335Document;
            }
        }
        
        public UITestControl UIDocument13636Document
        {
            get
            {
                if ((this.mUIDocument13636Document == null))
                {
                    this.mUIDocument13636Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument13636Document.TechnologyName = "Word";
                    this.mUIDocument13636Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument13636Document.SearchProperties["StartIndex"] = "36";
                    this.mUIDocument13636Document.SearchProperties["EndIndex"] = "36";
                    this.mUIDocument13636Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument13636Document;
            }
        }
        
        public UITestControl UIDocument13535Document
        {
            get
            {
                if ((this.mUIDocument13535Document == null))
                {
                    this.mUIDocument13535Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument13535Document.TechnologyName = "Word";
                    this.mUIDocument13535Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument13535Document.SearchProperties["StartIndex"] = "35";
                    this.mUIDocument13535Document.SearchProperties["EndIndex"] = "35";
                    this.mUIDocument13535Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument13535Document;
            }
        }
        
        public UITestControl UIDocument13135Document
        {
            get
            {
                if ((this.mUIDocument13135Document == null))
                {
                    this.mUIDocument13135Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument13135Document.TechnologyName = "Word";
                    this.mUIDocument13135Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument13135Document.SearchProperties["StartIndex"] = "31";
                    this.mUIDocument13135Document.SearchProperties["EndIndex"] = "35";
                    this.mUIDocument13135Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument13135Document;
            }
        }
        
        public UITestControl UIDocument12835Document
        {
            get
            {
                if ((this.mUIDocument12835Document == null))
                {
                    this.mUIDocument12835Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument12835Document.TechnologyName = "Word";
                    this.mUIDocument12835Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument12835Document.SearchProperties["StartIndex"] = "28";
                    this.mUIDocument12835Document.SearchProperties["EndIndex"] = "35";
                    this.mUIDocument12835Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument12835Document;
            }
        }
        
        public UITestControl UIDocument12929Document
        {
            get
            {
                if ((this.mUIDocument12929Document == null))
                {
                    this.mUIDocument12929Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument12929Document.TechnologyName = "Word";
                    this.mUIDocument12929Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument12929Document.SearchProperties["StartIndex"] = "29";
                    this.mUIDocument12929Document.SearchProperties["EndIndex"] = "29";
                    this.mUIDocument12929Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument12929Document;
            }
        }
        
        public UITestControl UIDocument13131Document
        {
            get
            {
                if ((this.mUIDocument13131Document == null))
                {
                    this.mUIDocument13131Document = new UITestControl(this);
                    #region Search Criteria
                    this.mUIDocument13131Document.TechnologyName = "Word";
                    this.mUIDocument13131Document.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIDocument13131Document.SearchProperties["StartIndex"] = "31";
                    this.mUIDocument13131Document.SearchProperties["EndIndex"] = "31";
                    this.mUIDocument13131Document.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIDocument13131Document;
            }
        }
        #endregion
        
        #region Fields
        private UITestControl mUIDocument1016Document;
        
        private UITestControl mUIDocument1023Document;
        
        private UITestControl mUIDocument1030Document;
        
        private UITestControl mUIDocument101Document;
        
        private UITestControl mUIDocument102Document;
        
        private UITestControl mUIDocument103Document;
        
        private UITestControl mUIDocument104Document;
        
        private UITestControl mUIDocument105Document;
        
        private UITestControl mUIDocument106Document;
        
        private UITestControl mUIDocument107Document;
        
        private UITestControl mUIDocument108Document;
        
        private UITestControl mUIDocument109Document;
        
        private UITestControl mUIDocument1010Document;
        
        private UITestControl mUIDocument1011Document;
        
        private UITestControl mUIDocument1012Document;
        
        private UITestControl mUIDocument1013Document;
        
        private UITestControl mUIDocument1014Document;
        
        private UITestControl mUIDocument1015Document;
        
        private UITestControl mUIDocument1017Document;
        
        private UITestControl mUIDocument1018Document;
        
        private UITestControl mUIDocument1019Document;
        
        private UITestControl mUIDocument1020Document;
        
        private UITestControl mUIDocument1021Document;
        
        private UITestControl mUIDocument1022Document;
        
        private UITestControl mUIDocument1024Document;
        
        private UITestControl mUIDocument1025Document;
        
        private UITestControl mUIDocument1026Document;
        
        private UITestControl mUIDocument1027Document;
        
        private UITestControl mUIDocument1028Document;
        
        private UITestControl mUIDocument1029Document;
        
        private UITestControl mUIDocument1031Document;
        
        private UITestControl mUIDocument1032Document;
        
        private UITestControl mUIDocument1033Document;
        
        private UITestControl mUIDocument1034Document;
        
        private UITestControl mUIDocument1035Document;
        
        private UITestControl mUIDocument1036Document;
        
        private UITestControl mUIDocument1037Document;
        
        private UITestControl mUIDocument12335Document;
        
        private UITestControl mUIDocument13636Document;
        
        private UITestControl mUIDocument13535Document;
        
        private UITestControl mUIDocument13135Document;
        
        private UITestControl mUIDocument12835Document;
        
        private UITestControl mUIDocument12929Document;
        
        private UITestControl mUIDocument13131Document;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIRibbonPropertyPage UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        
        public UIRibbonClient UIRibbonClient
        {
            get
            {
                if ((this.mUIRibbonClient == null))
                {
                    this.mUIRibbonClient = new UIRibbonClient(this);
                }
                return this.mUIRibbonClient;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonPropertyPage mUIRibbonPropertyPage;
        
        private UIRibbonClient mUIRibbonClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRibbonPropertyPage : WinControl
    {
        
        public UIRibbonPropertyPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UIItemTitleBar
        {
            get
            {
                if ((this.mUIItemTitleBar == null))
                {
                    this.mUIItemTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIItemTitleBar.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIItemTitleBar;
            }
        }
        
        public WinButton UIFileTabButton
        {
            get
            {
                if ((this.mUIFileTabButton == null))
                {
                    this.mUIFileTabButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFileTabButton.SearchProperties[WinButton.PropertyNames.Name] = "File Tab";
                    this.mUIFileTabButton.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIFileTabButton;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUIItemTitleBar;
        
        private WinButton mUIFileTabButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRibbonClient : WinClient
    {
        
        public UIRibbonClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinControl UIHomePropertyPage
        {
            get
            {
                if ((this.mUIHomePropertyPage == null))
                {
                    this.mUIHomePropertyPage = new WinControl(this);
                    #region Search Criteria
                    this.mUIHomePropertyPage.SearchProperties[UITestControl.PropertyNames.Name] = "Home";
                    this.mUIHomePropertyPage.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
                    this.mUIHomePropertyPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIHomePropertyPage;
            }
        }
        
        public WinTabPage UIInsertTabPage
        {
            get
            {
                if ((this.mUIInsertTabPage == null))
                {
                    this.mUIInsertTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIInsertTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Insert";
                    this.mUIInsertTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIInsertTabPage;
            }
        }
        
        public WinTabPage UIPageLayoutTabPage
        {
            get
            {
                if ((this.mUIPageLayoutTabPage == null))
                {
                    this.mUIPageLayoutTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIPageLayoutTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Page Layout";
                    this.mUIPageLayoutTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIPageLayoutTabPage;
            }
        }
        
        public WinTabPage UIReferencesTabPage
        {
            get
            {
                if ((this.mUIReferencesTabPage == null))
                {
                    this.mUIReferencesTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIReferencesTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "References";
                    this.mUIReferencesTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIReferencesTabPage;
            }
        }
        
        public WinTabPage UIMailingsTabPage
        {
            get
            {
                if ((this.mUIMailingsTabPage == null))
                {
                    this.mUIMailingsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIMailingsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Mailings";
                    this.mUIMailingsTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIMailingsTabPage;
            }
        }
        
        public WinTabPage UIReviewTabPage
        {
            get
            {
                if ((this.mUIReviewTabPage == null))
                {
                    this.mUIReviewTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIReviewTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Review";
                    this.mUIReviewTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIReviewTabPage;
            }
        }
        
        public WinTabPage UIViewTabPage
        {
            get
            {
                if ((this.mUIViewTabPage == null))
                {
                    this.mUIViewTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIViewTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "View";
                    this.mUIViewTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIViewTabPage;
            }
        }
        
        public WinTabPage UITeamTabPage
        {
            get
            {
                if ((this.mUITeamTabPage == null))
                {
                    this.mUITeamTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUITeamTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Team";
                    this.mUITeamTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUITeamTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIHomePropertyPage;
        
        private WinTabPage mUIInsertTabPage;
        
        private WinTabPage mUIPageLayoutTabPage;
        
        private WinTabPage mUIReferencesTabPage;
        
        private WinTabPage mUIMailingsTabPage;
        
        private WinTabPage mUIReviewTabPage;
        
        private WinTabPage mUIViewTabPage;
        
        private WinTabPage mUITeamTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDocument1Client : WinClient
    {
        
        public UIDocument1Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Document1";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinClient UIMicrosoftWordDocumenClient
        {
            get
            {
                if ((this.mUIMicrosoftWordDocumenClient == null))
                {
                    this.mUIMicrosoftWordDocumenClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIMicrosoftWordDocumenClient.SearchProperties[WinControl.PropertyNames.Name] = "Microsoft Word Document";
                    this.mUIMicrosoftWordDocumenClient.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIMicrosoftWordDocumenClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIMicrosoftWordDocumenClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIFileMenuBar : WinMenuBar
    {
        
        public UIFileMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UISaveMenuItem
        {
            get
            {
                if ((this.mUISaveMenuItem == null))
                {
                    this.mUISaveMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUISaveMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Save";
                    this.mUISaveMenuItem.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUISaveMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUISaveMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIFileMenuBar1 : WinMenuBar
    {
        
        public UIFileMenuBar1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "File";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinTabPage UINewTabPage
        {
            get
            {
                if ((this.mUINewTabPage == null))
                {
                    this.mUINewTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUINewTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "New";
                    this.mUINewTabPage.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUINewTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUINewTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAvailableTemplatesClient : WinClient
    {
        
        public UIAvailableTemplatesClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinListItem UIBlankdocumentListItem
        {
            get
            {
                if ((this.mUIBlankdocumentListItem == null))
                {
                    this.mUIBlankdocumentListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIBlankdocumentListItem.SearchProperties[WinListItem.PropertyNames.Name] = "Blank document";
                    this.mUIBlankdocumentListItem.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUIBlankdocumentListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIBlankdocumentListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UITemplatePreviewInforGroup : WinGroup
    {
        
        public UITemplatePreviewInforGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Template Preview Information";
            this.WindowTitles.Add("Document1 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[WinButton.PropertyNames.Name] = "Create";
                    this.mUICreateButton.WindowTitles.Add("Document1 - Microsoft Word");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UISaveAsWindow : WinWindow
    {
        
        public UISaveAsWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Save As";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public UICancelWindow UICancelWindow
        {
            get
            {
                if ((this.mUICancelWindow == null))
                {
                    this.mUICancelWindow = new UICancelWindow(this);
                }
                return this.mUICancelWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICancelWindow mUICancelWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICancelWindow : WinWindow
    {
        
        public UICancelWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "2";
            this.WindowTitles.Add("Save As");
            #endregion
        }
        
        #region Properties
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Save As");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIDocument2MicrosoftWoWindow : WinWindow
    {
        
        public UIDocument2MicrosoftWoWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Document2 - Microsoft Word";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "OpusApp";
            this.WindowTitles.Add("Document2 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow1 mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Ribbon";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "NetUIHWND";
            this.WindowTitles.Add("Document2 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public UIRibbonClient1 UIRibbonClient
        {
            get
            {
                if ((this.mUIRibbonClient == null))
                {
                    this.mUIRibbonClient = new UIRibbonClient1(this);
                }
                return this.mUIRibbonClient;
            }
        }
        
        public UIRibbonPropertyPage1 UIRibbonPropertyPage
        {
            get
            {
                if ((this.mUIRibbonPropertyPage == null))
                {
                    this.mUIRibbonPropertyPage = new UIRibbonPropertyPage1(this);
                }
                return this.mUIRibbonPropertyPage;
            }
        }
        #endregion
        
        #region Fields
        private UIRibbonClient1 mUIRibbonClient;
        
        private UIRibbonPropertyPage1 mUIRibbonPropertyPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRibbonClient1 : WinClient
    {
        
        public UIRibbonClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Document2 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinTabPage UIInsertTabPage
        {
            get
            {
                if ((this.mUIInsertTabPage == null))
                {
                    this.mUIInsertTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIInsertTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Insert";
                    this.mUIInsertTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUIInsertTabPage;
            }
        }
        
        public WinTabPage UIPageLayoutTabPage
        {
            get
            {
                if ((this.mUIPageLayoutTabPage == null))
                {
                    this.mUIPageLayoutTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIPageLayoutTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Page Layout";
                    this.mUIPageLayoutTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUIPageLayoutTabPage;
            }
        }
        
        public WinTabPage UIReferencesTabPage
        {
            get
            {
                if ((this.mUIReferencesTabPage == null))
                {
                    this.mUIReferencesTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIReferencesTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "References";
                    this.mUIReferencesTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUIReferencesTabPage;
            }
        }
        
        public WinTabPage UIMailingsTabPage
        {
            get
            {
                if ((this.mUIMailingsTabPage == null))
                {
                    this.mUIMailingsTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIMailingsTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Mailings";
                    this.mUIMailingsTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUIMailingsTabPage;
            }
        }
        
        public WinTabPage UIReviewTabPage
        {
            get
            {
                if ((this.mUIReviewTabPage == null))
                {
                    this.mUIReviewTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIReviewTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Review";
                    this.mUIReviewTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUIReviewTabPage;
            }
        }
        
        public WinTabPage UIViewTabPage
        {
            get
            {
                if ((this.mUIViewTabPage == null))
                {
                    this.mUIViewTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUIViewTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "View";
                    this.mUIViewTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUIViewTabPage;
            }
        }
        
        public WinTabPage UITeamTabPage
        {
            get
            {
                if ((this.mUITeamTabPage == null))
                {
                    this.mUITeamTabPage = new WinTabPage(this);
                    #region Search Criteria
                    this.mUITeamTabPage.SearchProperties[WinTabPage.PropertyNames.Name] = "Team";
                    this.mUITeamTabPage.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUITeamTabPage;
            }
        }
        #endregion
        
        #region Fields
        private WinTabPage mUIInsertTabPage;
        
        private WinTabPage mUIPageLayoutTabPage;
        
        private WinTabPage mUIReferencesTabPage;
        
        private WinTabPage mUIMailingsTabPage;
        
        private WinTabPage mUIReviewTabPage;
        
        private WinTabPage mUIViewTabPage;
        
        private WinTabPage mUITeamTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIRibbonPropertyPage1 : WinControl
    {
        
        public UIRibbonPropertyPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Ribbon";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "PropertyPage";
            this.WindowTitles.Add("Document2 - Microsoft Word");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Document2 - Microsoft Word");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
}
